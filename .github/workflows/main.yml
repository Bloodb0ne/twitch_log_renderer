name: Twitch Log Renderer Build

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest wheel
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        echo ::set-env name=repo_pkg_version::$(python setup.py --version)
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Build and publish
      run: |
        python setup.py bdist_wheel
    - name: Publish
      id: publish-artft
      uses: actions/upload-artifact@v2
      with:
        name: twitch_log_runner_${{ runner.os }}_${{ env.repo_pkg_version }}.zip
        path: dist/* 
    - name: Download Asset
      uses: actions/download-artifact@v2
      id: download
      with:
        name: twitch_log_runner_${{ runner.os }}_${{ env.repo_pkg_version }}.zip
        path: ./artif/
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ runner.os }}_${{ env.repo_pkg_version }}
        release_name: ${{ runner.os }} Release 
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ${{ steps.download.outputs.download-path }}/twitch_log_runner_${{ runner.os }}_${{ env.repo_pkg_version }}.zip
        asset_name: twitch_log_runner_${{ runner.os }}_${{ env.repo_pkg_version }}.zip
        asset_content_type: application/zip
